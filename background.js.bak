// background.js

// Listen for keyboard shortcut defined in manifest.json
chrome.commands.onCommand.addListener(async (command) => {
  if (command === "trigger_explainer") {
    // Find the active tab
    const [tab] = await chrome.tabs.query({ active: true, currentWindow: true });
    if (tab && tab.id) {
      // Ask the content script for the current selection
      chrome.tabs.sendMessage(tab.id, { type: "GET_SELECTION" });
    }
  }
});

// Listen for messages from content.js
chrome.runtime.onMessage.addListener((msg, sender) => {
  if (msg.type === "FETCH_OPENAI") {
    handleOpenAIRequest(msg.prompt, sender.tab.id);
  }
});

/**
 * Fetch explanation from OpenAI and send back to content script
 */
async function handleOpenAIRequest(prompt, tabId) {
  try {
    // Retrieve the API key from extension storage
    const { OPENAI_KEY } = await chrome.storage.local.get(["OPENAI_KEY"]);
    if (!OPENAI_KEY) {
      chrome.notifications.create({
        type: "basic",
        iconUrl: "icon.png", // optional, can omit if you don’t have an icon
        title: "Text Explainer",
        message: "No API key set. Right-click the extension ? Options to add one."
      });
      return;
    }

    // Call OpenAI
    const response = await fetch("https://api.openai.com/v1/chat/completions", {
      method: "POST",
      headers: {
        "Authorization": "Bearer " + OPENAI_KEY,
        "Content-Type": "application/json"
      },
      body: JSON.stringify({
        model: "gpt-4o-mini",
        temperature: 0,
        max_tokens: 120,
        messages: [
          {
            role: "system",
            content: "You are a concise explainer."
          },
          { role: "user", content: prompt }
        ]
      })
    });

    const data = await response.json();
    const text =
      data?.choices?.[0]?.message?.content?.trim() ||
      "No explanation returned.";

    // Send result back to the content script for insertion
    chrome.tabs.sendMessage(tabId, {
      type: "OPENAI_RESULT",
      result: text
    });
  } catch (err) {
    console.error("OpenAI request failed", err);
    chrome.tabs.sendMessage(tabId, {
      type: "OPENAI_RESULT",
      result: "Error: " + err.message
    });
  }
}
